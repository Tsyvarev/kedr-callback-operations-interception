interceptor.name = dentry_operations_interceptor
interceptor.operations_prefix = dentry_operations

header =>>
/* ========================================================================
 * Copyright (C) 2011, Andrey V. Tsyvarev  <tsyvarev@ispras.ru>
 *
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ======================================================================== */


#include <linux/fs.h>
<<


object.type = struct dentry
object.operations_field = d_op

operations.type = struct dentry_operations

[group]
operation.name = d_revalidate
operation.returnType = int

operation.arg.type = struct dentry *
operation.arg.name = dentry

operation.arg.type = struct nameidata *
operation.arg.name = nd

operation.object = dentry

# Called from d_revalidate; checked in d_set_d_op

[group]
operation.name = d_release

operation.arg.type = struct dentry *
operation.arg.name = dentry

operation.object = dentry

# Called from d_free
operation.default = return;//do nothing


[group]
operation.name = d_iput

operation.arg.type = struct dentry *
operation.arg.name = dentry

operation.arg.type = struct inode *
operation.arg.name = inode

operation.object = dentry

# Called from dentry_iput
operation.default = iput(inode);

[group]
operation.name = d_dname
operation.returnType = char *

operation.arg.type = struct dentry *
operation.arg.name = dentry

operation.arg.type = char *
operation.arg.name = buf

operation.arg.type = int
operation.arg.name = buflen

operation.object = dentry

# Called by d_path[_with_unreachable]
# Default implementation is difficult and subtle
